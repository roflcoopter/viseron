daemon off;
worker_processes auto;

error_log /var/log/nginx/error.log;
error_log /var/log/nginx/error.log notice;
error_log /var/log/nginx/error.log info;

pid /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/json
               application/javascript text/xml
               application/xml
               application/xml+rss
               text/javascript;

    upstream viseron {
        server localhost:9999;
    }

    upstream go2rtc {
        server localhost:1984;
    }

    server {
        listen       8888;
        server_name  localhost;

        location = /auth/camera_access_token {
            internal;
            proxy_pass http://viseron/api/v1/auth/request/camera_access_token/$camera_identifier?access_token=$auth_token;
            include proxy.conf;
        }

        location = /auth {
            internal;
            proxy_pass http://viseron/api/v1/auth/request;
            include proxy.conf;
        }

        location /api {
            proxy_pass http://viseron/api;
            include proxy.conf;
        }

        location /websocket {
            proxy_pass http://viseron/websocket;
            include proxy.conf;
        }

        location /live {
            set $auth_token $arg_access_token;
            set $camera_identifier $arg_src;
            auth_request /auth/camera_access_token;
            proxy_pass http://go2rtc/api/ws;
            include proxy.conf;
        }

        location /files {
            proxy_pass http://viseron/files;
            include static-files.conf;
        }

        location ~ ^/[A-Za-z0-9_]+/mjpeg-stream$ {
            proxy_pass http://viseron;
            include proxy.conf;
        }

        location ~ ^/[A-Za-z0-9_]+/mjpeg-streams/[A-Za-z0-9_\-]+$ {
            proxy_pass http://viseron;
            include proxy.conf;
        }

        location ~ ^/[A-Za-z0-9_]+/static-mjpeg-streams/[A-Za-z0-9_\-]+$ {
            proxy_pass http://viseron;
            include proxy.conf;
        }

        location / {
            add_header Cache-Control "no-store";
            expires off;

            location /assets/ {
                root /src/viseron/frontend;
                include static-files.conf;
            }

            root /src/viseron/frontend;
            try_files $uri $uri.html $uri/ /404.html;
        }
    }
}
