ARG UBUNTU_VERSION
ARG ARCH
ARG DLIB_VERSION
ARG BUILD_FROM
FROM roflcoopter/${ARCH}-dlib:${DLIB_VERSION} as dlib
FROM ${BUILD_FROM} as build

COPY --from=dlib /wheels /wheels

ARG ARCH

ENV \
  DEBIAN_FRONTEND=noninteractive \
  PIP_IGNORE_INSTALLED=0

RUN \
  if [ "$ARCH" = "armhf" ] || \
  [ "$ARCH" = "rpi3" ] || \
  [ "$ARCH" = "aarch64" ] ; then echo "Crossbuilding!" && cross-build-start; fi

RUN apt-get -yqq update && apt-get install -yq --no-install-recommends \
  curl \
  python3 \
  python3-dev \
  python3-pip \
  python3-setuptools \
  python3-wheel \
  && apt-get autoremove -y && apt-get clean -y

ADD requirements.txt requirements.txt
RUN \
  mkdir -p /wheels \
  && if [ "$ARCH" = "amd64" ] || [ "$ARCH" = "amd64-cuda" ]; then export PLATFORM="x86_64"; \
  elif [ "$ARCH" = "armhf" ] || [ "$ARCH" = "rpi3" ]; then export PLATFORM="armv7l"; \
  else export PLATFORM="$ARCH"; fi \
  \
  # EdgeTPU
  && echo "Downloading tflite runtime https://github.com/google-coral/pycoral/releases/download/release-frogfish/tflite_runtime-2.5.0-cp38-cp38-linux_$PLATFORM.whl" \
  && cd /wheels \
  && curl -sOL https://github.com/google-coral/pycoral/releases/download/release-frogfish/tflite_runtime-2.5.0-cp38-cp38-linux_$PLATFORM.whl \
  \
  && pip3 wheel --wheel-dir=/wheels --find-links=/wheels -r /requirements.txt \
  \
  && ls -al /wheels/

FROM scratch

COPY --from=build /wheels /wheels
