ARG UBUNTU_VERSION
ARG PYTHON_VERSION
ARG DLIB_VERSION
ARG JETPACK_VERSION
FROM roflcoopter/jetson-nano-dlib:${DLIB_VERSION} as dlib
FROM roflcoopter/jetson-nano-python:${PYTHON_VERSION} as python
FROM roflcoopter/jetson-nano-python:3.9.19 as python-3.9.19
FROM balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as qemu
FROM nvcr.io/nvidia/l4t-base:r${JETPACK_VERSION} as build

COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static
COPY --from=qemu /usr/bin/cross-build-start /bin/cross-build-start
COPY --from=qemu /usr/bin/cross-build-end /bin/cross-build-end
COPY --from=qemu /usr/bin/resin-xbuild /usr/bin/resin-xbuild

COPY --from=dlib /wheels /wheels

COPY --from=python-3.9.19 /usr/local /usr/local/
COPY --from=python /usr/local /usr/local/
RUN \
  cd /usr/local/bin && \
  ln -s idle3 idle && \
  ln -s pydoc3 pydoc && \
  ln -s python3 python

ENV \
  DEBIAN_FRONTEND=noninteractive \
  PIP_IGNORE_INSTALLED=0

ARG BUILDPLATFORM
RUN \
  echo "Build platform: $BUILDPLATFORM" && \
  if [ "$BUILDPLATFORM" = "linux/amd64" ]; then \
  echo "Crossbuilding!" && cross-build-start; \
  fi

RUN apt-get -yqq update && apt-get install -yq --no-install-recommends \
  wget \
  curl \
  build-essential \
  gcc \
  python3 \
  python3-dev \
  python3-pip \
  python3-setuptools \
  python3-wheel \
  libgirepository1.0-dev\
  libcairo2-dev \
  && python3 -m pip install --upgrade pip \
  && apt-get autoremove -y && apt-get clean -y \
  && python3 -m pip install numpy pybind11

# Install CMake
RUN wget https://cmake.org/files/v3.22/cmake-3.22.1-linux-aarch64.tar.gz && \
  tar -xvf cmake-3.22.1-linux-aarch64.tar.gz && \
  cp -r cmake-3.22.1-linux-aarch64/* /usr && \
  rm -rf cmake-3.22.1-linux-aarch64 && \
  rm cmake-3.22.1-linux-aarch64.tar.gz

# Pip does not find our OpenCV built from source so we fake it here
ARG OPENCV_VERSION
ADD docker/opencv-python-headless-setup.py /opencv-python-headless/setup.py
ADD requirements.txt requirements.txt
# Set OpenCV Version
RUN sed -i "s/OPENCV_VERSION=/OPENCV_VERSION=\"$OPENCV_VERSION\"/" /opencv-python-headless/setup.py
RUN echo "opencv-python-headless==$OPENCV_VERSION" >> /requirements.txt

ADD requirements.txt requirements.txt
ADD requirements-3.9.txt requirements-3.9.txt
RUN \
  mkdir -p /wheels \
  \
  && python3 -m pip wheel --wheel-dir=/wheels --find-links=/wheels /opencv-python-headless -r /requirements.txt \
  && python3.9 -m pip wheel \
  --extra-index-url https://google-coral.github.io/py-repo/ \
  --wheel-dir=/wheels-3.9 \
  --find-links=/wheels ${EXTRA_PIP_ARGS} /opencv-python-headless -r /requirements-3.9.txt \
  \
  && ls -al /wheels/ /wheels-3.9/

FROM scratch

COPY --from=build /wheels /wheels
COPY --from=build /wheels-3.9 /wheels-3.9
